{
  "name": "Eli Rigobeli IA - Historias Aliens",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/text-to-speech/y3X5crcIDtFawPx7bcNq/stream",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "sk_3ee7940227b27f3120d6386a592f7b4f853dda73521c6675"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"text\": \"{{ $('ROTEIRO').item.json.roteiro }}\",\n  \"model_id\": \"eleven_multilingual_v2\",\n  \"voice_settings\": {\n    \"stability\": 0.7,\n    \"similarity_boost\": 0.9\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -13408,
        912
      ],
      "id": "94365aaf-bf31-477e-89d6-9f0e2f8befb0",
      "name": "HTTP ElevenLabs"
    },
    {
      "parameters": {
        "jsCode": "let texto =  $input.first().json.output || '';\n\n// Remove aspas externas se houver\ntexto = texto.replace(/^\"(.*)\"$/, '$1');\n\n// Substitui \"R$\" por \"reais\"\ntexto = texto.replace(/R\\$/g, 'reais');\n\n// Remove quebras de linha e múltiplos espaços\ntexto = texto.replace(/[\\r\\n]+/g, ' ');           // quebra de linha → espaço\ntexto = texto.replace(/\\s\\s+/g, ' ');             // múltiplos espaços → um espaço\n\n// Remove espaços no início e fim\ntexto = texto.trim();\n\n// Remove caracteres de controle invisíveis (exceto espaço normal)\ntexto = texto.replace(/[\\u0000-\\u001F\\u007F]+/g, '');\n\n// Escapa aspas internas se for necessário usar com JSON.stringify (opcional)\ntexto = texto.replace(/\"/g, '\\\\\"');\n\nreturn [\n  {\n    json: {\n      roteiro: texto\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -16368,
        832
      ],
      "id": "535e72f1-8623-42f9-90fa-352e079adbab",
      "name": "Remove caracteres especiais"
    },
    {
      "parameters": {
        "resource": "folder",
        "name": "={{ $json.slug }}",
        "driveId": {
          "__rl": true,
          "value": "={{ $item(\"0\").$node[\"SETUP\"].json[\"g_googledrive_dir\"] }}",
          "mode": "id"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -15120,
        672
      ],
      "id": "f7e0e48f-8042-481e-b925-8451a7fc0f5e",
      "name": "Google Drive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "z0kYms3IIDQWAD2S",
          "name": "Google Drive Nando"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an expert visual artist specialized in generating realistic, atmospheric extraterrestrial horror illustrations from narrative scripts. Your job is to extract visual prompts from horror story scripts, creating vivid, disturbing, and cinematically impactful scenes that capture the essence of alien encounters and cosmic terror.\n\nVISUAL STYLE:\nPhotographic realism with supernatural and surreal extraterrestrial elements\n\nGloomy, overcast lighting with soft, diffused shadows\n\nFoggy, misty, or cloudy atmosphere with washed-out colors to create mystery and unease\n\nDesaturated color palette: cold grays, muted blues, pale greens, silvery tones\n\nDisturbingly calm water surfaces, murky reflections, and eerie stillness\n\nDetailed and hyper-realistic textures, with painterly and cinematic composition\n\nEXTRATERRESTRIAL ELEMENTS:\nAlien beings with bizarre and grotesquely humanoid smiles, oversized black or glossy eyes\n\nElongated heads or necks, emerging partially from water or fog\n\nNon-human anatomy with distorted proportions, but mockingly human features (like unnatural grins)\n\nFixed, uncanny expressions that create psychological discomfort\n\nPresence of multiple entities, giving the sense of encroaching invasion\n\nNo visible technology required — horror emanates from presence and form\n\nCOMPOSITION RULES:\nCreatures should be arranged in eerie symmetry or scattered in unnatural positions\n\nLeave space for potential text overlay, especially near upper or lower thirds\n\nScenes must evoke isolation and intrusion at once\n\nDepth and perspective should immerse the viewer into the unsettling environment\n\nUse of water bodies, lakesides, or foggy landscapes to enhance narrative depth\n\nHORROR TECHNIQUES:\nUncanny valley effect with human-like but clearly unnatural traits\n\nStillness and symmetry to evoke unease\n\nJuxtaposition of tranquil environments with grotesque alien appearances\n\nFocus on disturbing contrasts: childlike smiles with predatory undertones\n\nSlight environmental distortions: unnatural reflections, warped vegetation, or impossible mist shapes\n\nLIGHTING AND ATMOSPHERE:\nSoft but chilling ambient lighting typical of overcast or post-rainfall skies\n\nMist and haze as compositional layers to obscure and reveal selectively\n\nCreepy silhouettes partially emerging from fog or water\n\nUse of unnatural cold lighting (e.g. white or pale green highlights) to enhance alien presence\n\nPrefer twilight, late afternoon, or cloudy day settings over pure night\n\nNo text or captions should appear in the images. Extract the most visually compelling and narratively important moments from the provided script to create standalone horror illustrations that capture the essence of extraterrestrial terror with a surreal, foggy, and psychologically disturbing tone.\n\nOutput format: return only a valid JSON array like this, where each prompt and image name is incremented sequentially:\n\n{\n  \"image_prompts\": [\n    {\n      \"prompt\": \"prompt_1\",\n      \"image\": \"image_1\"\n    },\n    {\n      \"prompt\": \"prompt_2\",\n      \"image\": \"image_2\"\n    },\n    {\n      \"prompt\": \"prompt_3\",\n      \"image\": \"image_3\"\n    }\n  ]\n}",
              "role": "system"
            },
            {
              "content": "=I will provide you with a script of maximum 2500 characters.\n\nI need you to extract {{ $item(\"0\").$node[\"SETUP\"].json[\"g_qtdimagens\"] }} prompts in English to generate images using an AI API. Each image should describe a key moment that represents a specific point in the script or phrase, following the same order as the narration.\n\nGuidelines:\n- Each prompt must be 1 to 2 sentences long\n- The image cannot contain any text, captions, or written elements\n- Ensure each prompt is rich in details and specificity\n- Focus on the most visually impactful and narratively important moments\n- Maintain chronological order from the script\n- Emphasize atmospheric elements, character positioning, and environmental details\n- Include specific lighting, mood, and extraterrestrial/horror elements when relevant\n\nThis is the script content:\n{{ $item(\"0\").$node[\"ROTEIRO\"].json[\"roteiro\"] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -12816,
        720
      ],
      "id": "eb95e88e-99ff-4b30-8614-9fcd6192fbaf",
      "name": "Gera os prompts das imagens",
      "credentials": {
        "openAiApi": {
          "id": "aQN7ygpJdYK8UzVw",
          "name": "OpenAi Miklaus  Ghudu"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const raw = $input.first().json.message.content;\n\n// Corrige a string com aspas escapadas e quebras de linha\nconst cleaned = raw.replace(/\\\\n/g, '').replace(/\\\\\"/g, '\"');\n\n// Transforma a string JSON em objeto real\nconst parsed = JSON.parse(cleaned);\n\n// Retorna cada prompt como um item separado\nreturn parsed.image_prompts.map((item, index) => ({\n  json: {\n    ...item,\n    index: index + 1\n  }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -12240,
        448
      ],
      "id": "f52224a8-6cc8-4621-931a-fd603e23e5b4",
      "name": "Limpa o JSON"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.replicate.com/v1/models/black-forest-labs/flux-schnell/predictions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer SUA_APIKEY"
            },
            {
              "name": "Prefer",
              "value": "wait"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"input\": {\n    \"prompt\": \"{{ $json.prompt }}\",\n    \"go_fast\": true,\n    \"megapixels\": \"1\",\n    \"num_outputs\": 1,\n    \"aspect_ratio\": \"16:9\",\n    \"output_format\": \"jpg\",\n    \"output_quality\": 80,\n    \"num_inference_steps\": 4\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -11360,
        704
      ],
      "id": "fce9807c-2f88-40e0-b46e-6dfe99c54497",
      "name": "Gerar imagem",
      "executeOnce": true
    },
    {
      "parameters": {
        "url": "={{ $('Gerar imagem').item.json.urls.get }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization\t",
              "value": "Bearer SUA_APIKEY"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -11504,
        960
      ],
      "id": "953bb97f-cc3e-4a21-b6f0-63965af12655",
      "name": "Pega status da imagem"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "=succeeded",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "44d1de9b-5254-44c0-b8b7-190a1221561b"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "454c3820-7e0a-4bf2-bd41-4408651ad5f6",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "failed",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "160cb03c-dc45-4a89-add6-11299c60bb59",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "canceled",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "353ba927-d5f5-4308-9427-9583d62f2688",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "starting",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "25044cfc-1c72-450a-8302-fc06b6210c56",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "processing",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -12368,
        880
      ],
      "id": "49a93d65-ef9d-458c-ac22-8748168b4764",
      "name": "Switch1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -12000,
        800
      ],
      "id": "5f5d9ef6-08ac-42b6-bf63-e48c8cdd1ee8",
      "name": "Merge"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -12000,
        960
      ],
      "id": "48b7799a-5543-4f4f-b0d9-fac1f8e954a3",
      "name": "Merge1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -11536,
        304
      ],
      "id": "ff353c0b-bc26-4b76-adbb-441b622004bc",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "command": "rm -rf /tmp/youtubevideos/*"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -17680,
        800
      ],
      "id": "7944786d-5e81-474e-9291-5548c9144752",
      "name": "Limpa o diretorio /tmp/youtubevideos"
    },
    {
      "parameters": {
        "command": "=ls /tmp/youtubevideos/"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -14928,
        448
      ],
      "id": "aba334de-b373-4176-8e4b-d24f630dfb7d",
      "name": "lista"
    },
    {
      "parameters": {
        "command": "=mkdir -p /tmp/youtubevideos/{{ $json.slug }}"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -15120,
        448
      ],
      "id": "e095c2dd-2745-4e98-a971-178f765c7f7c",
      "name": "Cria o diretório no /tmp/youtubevideos se não existir"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/narracao.mp3",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -13104,
        320
      ],
      "id": "87d8108e-d59b-4cce-9ab3-32df3a9fc948",
      "name": "Salva áudio no TMP"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/{{ $('Limpa o JSON').item.json.image }}.jpg",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -11904,
        528
      ],
      "id": "68c9047d-9ec2-4415-b38f-bd74bb68a148",
      "name": "Salva img no /tmp/youtubevideos"
    },
    {
      "parameters": {
        "command": "=ls /tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -11264,
        192
      ],
      "id": "e4938da5-f5c6-461e-aa6e-df4bc0f8cd69",
      "name": "Execute Command"
    },
    {
      "parameters": {
        "content": "## 8 - Gera o vídeo sem legenda",
        "height": 80,
        "width": 1260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -11104,
        1184
      ],
      "typeVersion": 1,
      "id": "79c6f1d0-8338-4010-9edd-9b1b7b36f0e3",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "fileSelector": "=/tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/narracao.mp3",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -9728,
        992
      ],
      "id": "e06700b2-7dd6-466b-a370-bd006c2da9c6",
      "name": "Pega a narração"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.groq.com/openai/v1/audio/transcriptions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer gsk_SUA_APIKEY"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "whisper-large-v3"
            },
            {
              "name": "response_format",
              "value": "verbose_json"
            },
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            },
            {
              "name": "timestamp_granularities[]",
              "value": "segment"
            },
            {
              "name": "timestamp_granularities[]",
              "value": "word"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -9520,
        992
      ],
      "id": "adfada01-ae05-400c-ace8-5a2a6dfcb082",
      "name": "transcreve  audio no GROQ"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const narracaoIndex = $itemIndex;\nconst words = $json.words;\n\nif (!Array.isArray(words)) {\n  throw new Error(\"words inválidos\");\n}\n\nfunction dividirPorPalavras(wordsArray) {\n  const blocos = [];\n  let atual = [];\n  let blocoStart = wordsArray.length > 0 ? wordsArray[0].start : 0;\n\n  wordsArray.forEach((wordObj, index) => {\n    atual.push(wordObj.word);\n\n    const ehUltima = index === wordsArray.length - 1;\n    const passouLimite = atual.length >= 7 || ehUltima;\n\n    if (passouLimite) {\n      const blocoTexto = atual.join(' ');\n      const blocoEnd = wordObj.end;\n\n      blocos.push({\n        text: blocoTexto,\n        startTime: blocoStart,\n        endTime: blocoEnd\n      });\n\n      blocoStart = blocoEnd;\n      atual = [];\n    }\n  });\n\n  return blocos;\n}\n\nconst blocosFinal = dividirPorPalavras(words);\n\nreturn {\n  json: {\n    narracaoIndex,\n    blocos: blocosFinal,\n    words\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -9296,
        992
      ],
      "id": "0d850e0d-cba0-45ed-bb8f-caec9bdf0fb2",
      "name": "Limpa o retorno do GROQ"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "/**\n * Formata segundos para o padrão de tempo do ASS (H:MM:SS.cs).\n */\nfunction formatAssTime(seconds) {\n  const ms = Math.floor((seconds % 1) * 100);\n  const totalSeconds = Math.floor(seconds);\n  const h = String(Math.floor(totalSeconds / 3600)).padStart(1, '0');\n  const m = String(Math.floor((totalSeconds % 3600) / 60)).padStart(2, '0');\n  const s = String(totalSeconds % 60).padStart(2, '0');\n  const cs = String(ms).padStart(2, '0');\n  return `${h}:${m}:${s}.${cs}`;\n}\n\n/**\n * Gera o texto de uma linha com tags de duração de karaoke {\\k...}.\n * As cores são herdadas do Estilo definido em gerarAssCompleto.\n */\nfunction gerarKaraokeLinha(wordsSegmentadas, palavrasBloco) {\n  return wordsSegmentadas.map(palavra => {\n    const match = palavrasBloco.find(w =>\n      w.word.replace(/[,.!?;]/g, '').toLowerCase() ===\n      palavra.replace(/[,.!?;]/g, '').toLowerCase()\n    );\n    if (match) {\n      const duracao = Math.round((match.end - match.start) * 100);\n      return `{\\\\k${duracao}}${match.word}`;\n    } else {\n      return palavra;\n    }\n  }).join(' ');\n}\n\n/**\n * Cria uma ou mais linhas de diálogo para um segmento de texto.\n */\nfunction gerarLinhasPorSegmento(bloco, words) {\n  // A função formatAssTime é chamada aqui.\n  const inicio = formatAssTime(bloco.startTime);\n  const fim = formatAssTime(bloco.endTime);\n  \n  const palavrasSegmento = bloco.text.trim().split(/\\s+/);\n  const palavrasBloco = words.filter(w => w.start >= bloco.startTime && w.end <= bloco.endTime);\n\n  const linhaTexto = gerarKaraokeLinha(palavrasSegmento, palavrasBloco);\n  \n  return [`Dialogue: 0,${inicio},${fim},Default,,0,0,0,,${linhaTexto}`];\n}\n\n/**\n * Junta todas as partes e gera o conteúdo completo do arquivo .ass.\n * Define os estilos que controlam as cores do karaoke.\n */\nfunction gerarAssCompleto(blocos, words, index) {\n  const assHeader = `[Script Info]\nTitle: Letra ${String(index).padStart(2, '0')}\nScriptType: v4.00+\nPlayResX: 1280\nPlayResY: 720\n\n[V4+ Styles]\nFormat: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding\nStyle: Default,Arial,60,&H0000FFFF,&H00FFFFFF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,2,1,2,30,30,80,1\n\n[Events]\nFormat: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text`;\n\n  const linhas = blocos.flatMap(bloco => gerarLinhasPorSegmento(bloco, words));\n  return `${assHeader}\\n${linhas.join('\\n')}`;\n}\n\n// === Lógica principal de execução ===\nconst blocos = $json.blocos;\nconst words = $json.words;\nconst musicaIndex = $json.musicaIndex || 1;\n\nconst ass = gerarAssCompleto(blocos, words, musicaIndex);\nconst buffer = Buffer.from(ass, 'utf-8');\n\nreturn {\n  binary: {\n    data: {\n      data: buffer.toString('base64'),\n      mimeType: 'text/x-ass',\n      fileName: `legenda_${musicaIndex}.ass`\n    }\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -9104,
        992
      ],
      "id": "e535d314-b2fd-41bb-ba9b-8f7a509da467",
      "name": "gera .ass"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/legenda.ass",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -8880,
        992
      ],
      "id": "d5299c6c-7786-4464-83cb-3f9aa346c148",
      "name": "Salva legenda no /tmp/youtubevideos"
    },
    {
      "parameters": {
        "content": "## 9 - Gera legenda .ASS",
        "height": 80,
        "width": 1280
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -9776,
        1184
      ],
      "typeVersion": 1,
      "id": "c7f167c2-a16a-48ef-8d21-8812e1b23f6a",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "command": "={{ $json.ffmpeg_command }}"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -10160,
        992
      ],
      "id": "14b6e423-9b59-4a56-857b-b149ff90b39c",
      "name": "Gera vídeo sem legenda"
    },
    {
      "parameters": {
        "command": "=ffmpeg -i /tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/video_sem_legenda.mp4 -vf \"ass=/tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/legenda.ass\" -c:a copy -y /tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/video_com_legenda.mp4"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -8400,
        992
      ],
      "id": "cefb5296-6a85-4e7e-a247-c42db6618d6c",
      "name": "Gera vídeo com legenda"
    },
    {
      "parameters": {
        "content": "## 6 - Embute a legenda no vídeo",
        "height": 80,
        "width": 480,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -8480,
        1184
      ],
      "typeVersion": 1,
      "id": "a56c98bf-c720-4360-b5b0-dd002db74f8e",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "jsCode": "const duracaoNarracao = parseInt($('NARRACAO').first().json.tempo_s);\nconst duracaoMinimaPorMusica = 150;\n\n// Calcula exatamente quantas músicas são necessárias para cobrir a narração\nconst quantidadeMusicas = Math.ceil(duracaoNarracao / duracaoMinimaPorMusica);\n\nreturn [{\n  json: {\n    quantidade_musicas_para_baixar: quantidadeMusicas\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7920,
        992
      ],
      "id": "69f3f621-49a9-4da0-b949-0b1a043b997e",
      "name": "Quantas musicas preciso"
    },
    {
      "parameters": {
        "jsCode": "function normalizeName(name) {\n  return name.replace(/\\s*\\(\\d+\\)(?=\\.\\w+$)/, '');\n}\n\nconst uniqueMap = new Map();\n\n// Remove duplicados com base no nome normalizado\nfor (const item of items) {\n  const filename = item.json.name || item.json.file || '';\n  const baseName = normalizeName(filename);\n\n  if (!uniqueMap.has(baseName)) {\n    uniqueMap.set(baseName, item);\n  }\n}\n\n// Pega os únicos e embaralha\nconst uniqueItems = Array.from(uniqueMap.values());\nconst shuffled = uniqueItems.sort(() => 0.5 - Math.random());\n\n// Retorna apenas 2 músicas\nreturn shuffled.slice(0, $('Quantas musicas preciso').first().json.quantidade_musicas_para_baixar);\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7456,
        992
      ],
      "id": "abd05bd7-d3c5-44b1-af0b-ff3bdd8fbb1b",
      "name": "Seleciona X de forma aleatória",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/musica{{$itemIndex}}.mp3",
        "dataPropertyName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -6960,
        992
      ],
      "id": "7dfc640e-f3bb-488d-869e-fba1fa3bf341",
      "name": "Salva as músicas"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -7200,
        992
      ],
      "id": "0b511171-2652-4d55-917e-1e6705dda898",
      "name": "Faz o download da música",
      "alwaysOutputData": true,
      "executeOnce": false,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "z0kYms3IIDQWAD2S",
          "name": "Google Drive Nando"
        }
      }
    },
    {
      "parameters": {
        "content": "## 7- Faz o download das músicas",
        "height": 80,
        "width": 1240,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -7984,
        1184
      ],
      "typeVersion": 1,
      "id": "83d78069-8491-44ca-90f9-37e57fae8ce6",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "jsCode": "const diretorio = \"/tmp/youtubevideos/\" + $('DIRETÓRIO').first().json.diretorio_slug;\nconst totalMusicas = $('Quantas musicas preciso').first().json.quantidade_musicas_para_baixar;\n\nlet comando;\n\nif (totalMusicas === 1) {\n  const path = `${diretorio}/musica0.mp3`;\n  // Apenas copia o arquivo para manter a mesma saída esperada\n  comando = `cp ${path} ${diretorio}/musica_unida.mp3`;\n} else {\n  let inputs = '';\n  let concatList = '';\n\n  for (let i = 0; i < totalMusicas; i++) {\n    const path = `${diretorio}/musica${i}.mp3`;\n    inputs += `-i ${path} `;\n    concatList += `[${i}:a]`;\n  }\n\n  const filter = `${concatList}concat=n=${totalMusicas}:v=0:a=1[outa]`;\n  comando = `ffmpeg ${inputs}-filter_complex \"${filter}\" -map \"[outa]\" -y ${diretorio}/musica_unida.mp3`;\n}\n\nreturn [{\n  json: {\n    ffmpeg_command: comando\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6608,
        992
      ],
      "id": "3928ce31-4fcc-497b-b12c-8ccfb21c43ef",
      "name": "Gera comando para unir as músicas"
    },
    {
      "parameters": {
        "content": "## 8-Une as músicas (se precisar)",
        "height": 80,
        "width": 800,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -6704,
        1184
      ],
      "typeVersion": 1,
      "id": "d4193593-cbb0-4dbd-93eb-1da683241b7d",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## 10 - Gera música com narração",
        "height": 80,
        "width": 1340,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5408,
        1184
      ],
      "typeVersion": 1,
      "id": "e13ffdd2-2771-4ef2-aad8-e4bda871803f",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "command": "=ls /tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -6128,
        672
      ],
      "id": "3da6fdc4-3f3d-4163-8b39-0304455c71d8",
      "name": "lista o diretório1"
    },
    {
      "parameters": {
        "fileSelector": "=/tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/musica_unida.mp3",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -6128,
        832
      ],
      "id": "fa53ac02-0543-4272-9e33-bc482f0ab86e",
      "name": "lê o arquivo gerado"
    },
    {
      "parameters": {
        "command": "=ffprobe -i /tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/video_com_legenda.mp4 -show_entries format=duration -v quiet -of csv=\"p=0\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -5360,
        992
      ],
      "id": "e0110678-cf16-42e7-ab47-7cf0a3f7fa9e",
      "name": "Pega o tamanho do vídeo com legenda"
    },
    {
      "parameters": {
        "command": "=ffprobe -i /tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/musica_unida_baixa.mp3 -show_entries format=duration -v quiet -of csv=\"p=0\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -5168,
        992
      ],
      "id": "b7f9efd8-cc52-40d0-bf96-6636b116b4fe",
      "name": "Pega o tamanho da música unida"
    },
    {
      "parameters": {
        "command": "=ffmpeg -i /tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/musica_unida.mp3 -filter:a \"volume=0.5\" -y /tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/musica_unida_baixa.mp3"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -5696,
        992
      ],
      "id": "ba8d3325-1696-45b7-8e0d-532b32964de8",
      "name": "Abaixa o volume da música"
    },
    {
      "parameters": {
        "jsCode": "const diretorio = \"/tmp/youtubevideos/\"+$('DIRETÓRIO').first().json.diretorio_slug;\n\nconst narracao = `${diretorio}/narracao.mp3`;\nconst musica = `${diretorio}/musica_unida_baixa.mp3`;\nconst output = `${diretorio}/audio_mixado_final.mp3`;\n\nconst comando = `ffmpeg \\\n-i \"${narracao}\" \\\n-i \"${musica}\" \\\n-filter_complex \"[0:a][1:a]amix=inputs=2:duration=first[aout]\" \\\n-map \"[aout]\" \\\n-c:a libmp3lame -q:a 2 -y \"${output}\"`;\n\nreturn [{\n  json: {\n    ffmpeg_command: comando\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4688,
        992
      ],
      "id": "a4728bbd-3fc8-4b3a-aa0e-f09ca7947c0a",
      "name": "comando para unir música com narração"
    },
    {
      "parameters": {
        "command": "=ffprobe -i /tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/narracao.mp3 -show_entries format=duration -v quiet -of csv=\"p=0\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -10976,
        784
      ],
      "id": "13e6235f-5d11-4078-88b6-ccca3fb02caf",
      "name": "Pega o tamanho da narração mp3"
    },
    {
      "parameters": {
        "jsCode": "const seconds = parseFloat($input.first().json.stdout);\nconst rounded = Math.round(seconds);\n\nreturn [{ duracao_em_segundos: rounded }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -10768,
        992
      ],
      "id": "529b3574-32a9-4aad-a8fd-cb83fa58098b",
      "name": "Configura o tamanho da narração"
    },
    {
      "parameters": {
        "fileSelector": "=/tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/video_final_completo.mp4",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -3440,
        784
      ],
      "id": "0811cf2f-a85c-4be3-8932-258138cccab6",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "content": "##  11 - Gera o vídeo final",
        "height": 80,
        "width": 960,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4016,
        1184
      ],
      "typeVersion": 1,
      "id": "3a479b9d-fedd-4d4f-a46c-e44dc966a2c5",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "name": "=",
        "driveId": {
          "__rl": true,
          "value": "={{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_id\"] }}",
          "mode": "id"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -3248,
        784
      ],
      "id": "49e0b1b1-23be-4da4-a73f-d1869a82c775",
      "name": "Upload do vídeo final",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "z0kYms3IIDQWAD2S",
          "name": "Google Drive Nando"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -17872,
        800
      ],
      "id": "1f791379-1f89-4c91-977c-ecd58a0da1a0",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "content": "## 02 - Criação do roteiro",
        "height": 80,
        "width": 1240,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -17296,
        1184
      ],
      "typeVersion": 1,
      "id": "41a08334-b444-458f-bf99-d2cd3e2c1238",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "## 06 - Gera o áudio da narração",
        "height": 80,
        "width": 500,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -13424,
        1184
      ],
      "typeVersion": 1,
      "id": "ce0f9079-9bb5-4c7b-9770-a1fb0a1c2208",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "content": "## 07 - Gera as imagens",
        "height": 80,
        "width": 1720,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -12864,
        1184
      ],
      "typeVersion": 1,
      "id": "69ba7dba-bbfb-4ab3-a619-0d225a8175f0",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "={{ $item(\"0\").$node[\"SETUP\"].json[\"g_googledrive_planilha\"] }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "videos",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1wEO-DdbWQX31qwsX7CZb3QDNHqdndCq35nkjTiDcBWE/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "id",
              "lookupValue": "={{ $item(\"0\").$node[\"SETUP\"].json[\"id\"] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -2928,
        992
      ],
      "id": "1e4ba93a-d360-4abc-b3dc-c01e2e6ebecd",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "vHqCTXoRqXEhzJ3k",
          "name": "Google Sheets nando"
        }
      }
    },
    {
      "parameters": {
        "content": "## 12 Publica o vídeo no Youtube",
        "height": 80,
        "width": 1300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3008,
        1184
      ],
      "typeVersion": 1,
      "id": "a91b57ea-8cfb-4d34-b118-157e4b39b7ce",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -304,
        928
      ],
      "id": "27cec777-37da-4686-95a2-bcf193f70a50",
      "name": "Wait",
      "webhookId": "ab0280db-870b-444c-94dd-3c7a673f7dd5"
    },
    {
      "parameters": {
        "url": "={{ $('Gera thumbnail').item.json.urls.get }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization\t",
              "value": "Bearer SUA_APIKEY"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -144,
        928
      ],
      "id": "6ed56ecb-1be3-4640-bcb9-37d9b1f9055e",
      "name": "Pega status da imagem1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "=succeeded",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "44d1de9b-5254-44c0-b8b7-190a1221561b"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "454c3820-7e0a-4bf2-bd41-4408651ad5f6",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "failed",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "160cb03c-dc45-4a89-add6-11299c60bb59",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "canceled",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "353ba927-d5f5-4308-9427-9583d62f2688",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "starting",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "25044cfc-1c72-450a-8302-fc06b6210c56",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "processing",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1008,
        848
      ],
      "id": "d05d369d-e1d9-4eb4-920b-dc5e181e960a",
      "name": "Switch"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -640,
        768
      ],
      "id": "9d0f3d21-9b95-4df9-af84-71edd2fd1151",
      "name": "Merge2"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -640,
        928
      ],
      "id": "c3426671-001f-4a43-9329-63781fef201c",
      "name": "Merge3"
    },
    {
      "parameters": {
        "url": "={{ $json.output[0] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -800,
        592
      ],
      "id": "5ed17eae-b06f-4131-b5ea-b1a3876510c3",
      "name": "Baixa a imagem"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -288,
        272
      ],
      "id": "ec6ac350-0c00-431d-be31-df0eafdfef30",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "content": "##  11 - Gera a thumbnail",
        "height": 80,
        "width": 3260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1648,
        1184
      ],
      "typeVersion": 1,
      "id": "68aead6a-166c-41be-b078-670e6810fad3",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "fileSelector": "=/tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/thumbnail_final.jpg",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1104,
        240
      ],
      "id": "c532768f-2031-433b-b180-ed5ade53e799",
      "name": "pega nova thumb1"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "=1C5xI5mzAVRKsKupgRvvOqrjvGlvl3KNv",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        272,
        240
      ],
      "id": "bcfd192e-c030-4d03-b148-ce636c89c1b3",
      "name": "Faz o download da fonte ttf",
      "alwaysOutputData": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "z0kYms3IIDQWAD2S",
          "name": "Google Drive Nando"
        }
      }
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/tmp/youtubevideos/montserrat-black.ttf",
        "dataPropertyName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        464,
        240
      ],
      "id": "bd34f022-e0e6-452e-82e3-68ecb229f51e",
      "name": "Salva a fonte"
    },
    {
      "parameters": {
        "content": "## 01 - Configurações",
        "height": 80,
        "width": 460
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -17776,
        1184
      ],
      "typeVersion": 1,
      "id": "05567493-32f2-4162-8b64-d32a53e19110",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"title\": \"ALERTA DE UFO: MISTÉRIO ASSUSTADOR NO CÉU...\",\n  \"description\": \"This really happened. A shocking extraterrestrial encounter left witnesses speechless. Do you believe in alien life? Subscribe for more terrifying stories!\",\n  \"tags\": \"alien, ufo, terror, mystery, haunting, extraterrestrial, suspense, true story\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -15808,
        1040
      ],
      "id": "f2949320-8b6d-401c-9e12-9769eb599cfb",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "content": "## 03 - Dados para publicação",
        "height": 80,
        "width": 540,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -16016,
        1184
      ],
      "typeVersion": 1,
      "id": "501aa693-5955-49cf-9ee7-6462963086a4",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Create a cosmic horror story based on an alien encounter.\n\nIMPORTANT:\n- Do not exceed 2300 characters.",
        "options": {
          "systemMessage": "=You are a master storyteller specializing in cosmic horror and extraterrestrial encounters. Your stories blend psychological terror with otherworldly phenomena, creating narratives that disturb and captivate readers through atmospheric tension rather than explicit violence.\n\nIMPORTANT:\nAll your responses must be written in fluent {{ $json.g_idioma }}, with natural, fluent language and rich in {{ $json.g_idioma }} idiomatic expressions.\nYour response must be exactly between 2300 and 2400 characters. The character count must be followed strictly. Do not exceed 2400 characters and do not fall below 2300 characters. Keep the narrative concise yet impactful. Do not include the character count in your response.\n\nSTRUCTURE:\n\nAtmospheric Opening: Create an introduction with a sense of something wrong in the environment.\n\nCreeping Revelation: Gradually introduce alien or supernatural elements with indirect signs.\n\nPsychological Escalation: Focus on the deterioration of the protagonist's mental state and growing paranoia.\n\nCosmic Confrontation: Reveal the extraterrestrial presence in a way that challenges human understanding.\n\nAmbiguous Resolution: End with an uncertain or disturbing resolution, leaving a sense of unease.\n\nTONE:\nThe narrative should be cerebral, atmospheric, and deeply unsettling. Think of something like Lovecraft, mixed with modern psychological sci-fi thriller.\n\nIMPORTANT:\nYour response should be approximately 2300 characters. It must never exceed this limit under any circumstances. Stay close to this count, and do not write anything outside the story itself — no explanations or character count.\n\nResponses exceeding or below the limit will be considered invalid."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -17264,
        800
      ],
      "id": "41b2d217-3fe1-48ff-abd6-5443ee3f4ae1",
      "name": "Agente Roteiro"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Generate YouTube metadata optimized for SEO and engagement, based on the following extraterrestrial horror story:\n{{ $json.roteiro }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a YouTube expert specializing in organic growth, SEO, and viral extraterrestrial horror and suspense videos. Your mission is to create highly optimized metadata based on an extraterrestrial horror story provided, always respecting platform guidelines.\n\nAll content must be written in fluent {{ $('SETUP').item.json.g_idioma }}.\n\nYour delivery must contain:\n\n1. **Title (title)**:\n   - Completely in UPPERCASE\n   - Maximum 60 characters (including spaces)\n   - Must contain high emotional impact words related to terror/suspense\n   - Include elements like: ALIEN, UFO, TERROR, MYSTERY, HAUNTING\n   - End with \"...\" to generate curiosity and suspense\n\n2. **Description (description)**:\n   - 2 to 4 lines\n   - Must mention it's a real story/based on facts about extraterrestrial encounter\n   - Create atmosphere of mystery and terror\n   - May include an invitation to subscribe for more scary stories\n   - Use phrases like \"Do you believe in extraterrestrial life?\" or \"This really happened...\"\n\n3. **Tags (tags)**:\n   - Output must be a **single string** with the tags, not an array\n   - Format: `\"alien, ufo, terror, mystery, haunting\"`\n   - Use 5 to 10 short and direct keywords related to extraterrestrial horror\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -15968,
        832
      ],
      "id": "4f5cb1bb-0874-4f0e-8b30-f3ab44bae258",
      "name": "Agente Publicação"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3fe039dc-63d5-470c-adcb-ea077c219207",
              "name": "roteiro",
              "value": "={{ $json.roteiro }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -16176,
        832
      ],
      "id": "3ad4b100-f2b9-4ece-9112-87813cb76f76",
      "name": "ROTEIRO"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "491dbc33-e2f5-49a3-9da1-bd0e04625a5f",
              "name": "id",
              "value": "={{ $execution.id }}",
              "type": "string"
            },
            {
              "id": "2d641135-253a-4097-a25e-a8e15210ad7a",
              "name": "g_hoje",
              "value": "={{ new Date().toISOString().split('T')[0] }}",
              "type": "string"
            },
            {
              "id": "2d7f751e-0fdd-43ec-8fd3-8e32feaa74f0",
              "name": "g_qtdimagens",
              "value": "10",
              "type": "string"
            },
            {
              "id": "2b968547-24e5-4736-b8c5-1df10b0b97db",
              "name": "g_googledrive_dir",
              "value": "1x8OcfujW7d7GI7bdZgApNeGK8y9Ot_Ur",
              "type": "string"
            },
            {
              "id": "061cb702-3449-4a6e-b51f-34df1a31eec2",
              "name": "g_googledrive_planilha",
              "value": "15TzqwGL017r61u-eDnMvzWFEmm-bGwt75mqSaIdNJOg/edit?gid=0#gid=0",
              "type": "string"
            },
            {
              "id": "2c59d597-218f-452a-a6df-d7090b33a897",
              "name": "g_idioma",
              "value": "English",
              "type": "string"
            },
            {
              "id": "1470f078-663a-472d-96ad-0fabb5b6c051",
              "name": "g_musicas_dir",
              "value": "1oYnezYuGhqjOo8g-vJoEcPJ1PzUDswi7",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -17504,
        800
      ],
      "id": "4dbf0679-5618-4b0d-ba8d-14635002fff2",
      "name": "SETUP"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "197db042-4d25-49f5-9c45-bbe551993891",
              "name": "title",
              "value": "={{ $json.output.title }}",
              "type": "string"
            },
            {
              "id": "e08db3e5-0f4d-43d4-b4fc-6500c1be85d6",
              "name": "description",
              "value": "={{ $json.output.description }}",
              "type": "string"
            },
            {
              "id": "41643ae7-683c-4c1c-b472-3ae28205c409",
              "name": "tags",
              "value": "={{ $json.output.tags }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -15616,
        832
      ],
      "id": "f2ea4378-494e-4300-ac36-0f071a38593e",
      "name": "PUBLICAÇÃO"
    },
    {
      "parameters": {
        "content": "## 04 - Cria e configura dados do diretório",
        "height": 80,
        "width": 920,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -15440,
        1184
      ],
      "typeVersion": 1,
      "id": "e7963030-bd50-4360-808d-2693dc81f8bd",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  let titulo = $input.first().json.title || '';\n\n  // 1. Converte para minúsculas\n  titulo = titulo.toLowerCase();\n\n  // 2. Remove acentos\n  titulo = titulo.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n\n  // 3. Remove caracteres especiais\n  titulo = titulo.replace(/[^a-z0-9\\s-]/g, \"\");\n\n  // 4. Substitui espaços e múltiplos espaços por hífens\n  titulo = titulo.replace(/\\s+/g, '-');\n\n  // 5. Remove hífens duplicados ou nas pontas\n  titulo = titulo.replace(/-+/g, '-').replace(/^-+|-+$/g, '');\n\n  // Retorna com o novo campo `slug` ou `pasta`\n  return {\n    json: {\n      slug: titulo,\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -15408,
        832
      ],
      "id": "2af1d88b-113a-4b06-8940-35cc35f95f0f",
      "name": "Gera a slug do diretório"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -14880,
        800
      ],
      "id": "6026109f-deb8-4cba-8f34-9d2d8800347b",
      "name": "Combina",
      "executeOnce": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "15d44eca-f9c9-41a0-849d-441bd5a9303f",
              "name": "diretorio_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "d60bd2a4-5605-4a35-b143-a17d2739d45a",
              "name": "diretorio_slug",
              "value": "={{ $json.slug }}",
              "type": "string"
            },
            {
              "id": "09a12b07-48c4-4270-b719-4e90c5a84be1",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -14656,
        800
      ],
      "id": "6a098ad9-74a6-4b92-a319-6c5037c5769f",
      "name": "DIRETÓRIO",
      "executeOnce": false
    },
    {
      "parameters": {
        "content": "## 05 - Salva o que gerou",
        "height": 80,
        "width": 620,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -14480,
        1184
      ],
      "typeVersion": 1,
      "id": "f913f7bc-35e1-4330-be30-92e21acec576",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "name": "dados_para_upload.txt",
        "driveId": {
          "__rl": true,
          "value": "={{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_id\"] }}",
          "mode": "id"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -14016,
        304
      ],
      "id": "647fe731-7e31-4ee9-8297-260ff12806f7",
      "name": "Salva no GDrive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "z0kYms3IIDQWAD2S",
          "name": "Google Drive Nando"
        }
      }
    },
    {
      "parameters": {
        "content": "Dados de publicação no google drive",
        "height": 200,
        "width": 540,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -14416,
        272
      ],
      "typeVersion": 1,
      "id": "c04e71c1-b560-4847-8d3d-81c2a15dd03f",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "Salva roteiro no /tmp/youtubevideos e GDrive",
        "height": 460,
        "width": 540,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -14416,
        528
      ],
      "typeVersion": 1,
      "id": "983b1598-b2ea-4cac-8ff4-e994f89eba9e",
      "name": "Sticky Note19"
    },
    {
      "parameters": {
        "driveId": {
          "__rl": true,
          "value": "={{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_id\"] }}",
          "mode": "id"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -14064,
        720
      ],
      "id": "3a78af12-9600-4447-b0ac-8539f1be9173",
      "name": "Salva roteiro",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "z0kYms3IIDQWAD2S",
          "name": "Google Drive Nando"
        }
      }
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/tmp/youtubevideos/{{ $('Gera a slug do diretório').item.json.slug }}/roteiro.txt",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -14064,
        560
      ],
      "id": "0494ae9a-e0d0-4bdb-9fae-d3fb75f732c2",
      "name": "Salva roteiro1"
    },
    {
      "parameters": {
        "jsCode": "const titulo = $('PUBLICAÇÃO').first().json.title;\nconst descricao = $('PUBLICAÇÃO').first().json.description;\nconst tags = $('PUBLICAÇÃO').first().json.tags;\n\n// Formata o conteúdo do arquivo\nconst conteudo = \n`TÍTULO:\n${titulo}\n\nDESCRIÇÃO:\n${descricao}\n\nTAGS:\n${tags}\n\n`;\n\nconst safeFileName = titulo\n  .toLowerCase()\n  .normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\n  .replace(/[^a-z0-9\\s-]/g, \"\")\n  .replace(/\\s+/g, '-')\n  .replace(/-+/g, '-')\n  .replace(/^-+|-+$/g, '');\n\nconst buffer = Buffer.from(conteudo, 'utf-8');\n\nreturn [\n  {\n    json: {},\n    binary: {\n      data: {\n        data: buffer.toString('base64'),\n        fileName: `dados_de_publicacao.txt`,\n        mimeType: 'text/plain'\n      }\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -14240,
        304
      ],
      "id": "9ce011aa-e494-4273-a343-510b04807e2e",
      "name": "Monta o TXT em base64"
    },
    {
      "parameters": {
        "jsCode": "const tituloBruto = $input.first().json.diretorio_slug || \"Sem título\";\nconst titulo = tituloBruto.replace(/\\.\\.\\.$/, '');\n\nconst roteiro = $('ROTEIRO').first().json.roteiro || \"Sem conteúdo\";\n\nconst safeFileName = titulo.replace(/[\\/\\\\?%*:|\"<>]/g, '-');\nconst buffer = Buffer.from(roteiro, 'utf-8');\n\nreturn [\n  {\n    binary: {\n      data: {\n        data: buffer.toString('base64'),\n        mimeType: 'text/plain',\n        fileName: `roteiro.txt`\n      }\n    },\n    json: {}\n  }\n];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -14368,
        800
      ],
      "id": "bee2bc99-c17d-492b-9161-c270a18f0300",
      "name": "Gera roteiro em base64"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Rewrite the text below while maintaining its style, structure, and impact, but reduce the total character count to strictly between 2300 and 2400 characters.\nDo not remove essential elements — only adjust phrases and wording naturally to shorten the text.\nReturn only the final version of the story.\n\nDo not exceed 2400 characters.\nOriginal text:\n{{ $json.output }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -16720,
        544
      ],
      "id": "26e682fc-64b1-4aaa-9dfd-4e23b0bfa9a2",
      "name": "Ajusta caracteres"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0a7717c7-78d4-4fc3-a875-d0d5c8f6af6c",
              "leftValue": "={{ $json.output.length }}",
              "rightValue": 2500,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -16944,
        800
      ],
      "id": "95451df9-a875-4522-9a6f-cbc0af8824a3",
      "name": "Verifica qtd caracteres"
    },
    {
      "parameters": {
        "content": "## 05 - Atualiza a planilha",
        "height": 80,
        "width": 360,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -13824,
        1184
      ],
      "typeVersion": 1,
      "id": "dc5edcb9-b996-44d1-9da5-5d626e5cd3bb",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "name": "=narracao.mp3",
        "driveId": {
          "__rl": true,
          "value": "={{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_id\"] }}",
          "mode": "id"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -13104,
        528
      ],
      "id": "68af4478-e4b0-4556-a040-70f6ff9fdbeb",
      "name": "Salva áudio",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "z0kYms3IIDQWAD2S",
          "name": "Google Drive Nando"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.output[0] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -12160,
        672
      ],
      "id": "7f0e8418-169e-475a-9983-3e6b8e22412a",
      "name": "Baixa a imagem2"
    },
    {
      "parameters": {
        "name": "={{ $('Limpa o JSON').item.json.image }}.jpg",
        "driveId": {
          "__rl": true,
          "value": "={{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_id\"] }}",
          "mode": "id"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -11760,
        672
      ],
      "id": "03d98eab-1121-41a2-9a5e-9495bbd590de",
      "name": "Salva no GDrive1",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "z0kYms3IIDQWAD2S",
          "name": "Google Drive Nando"
        }
      }
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -11664,
        960
      ],
      "id": "99d1fe7f-cba5-4e6a-8616-eb20b37022f6",
      "name": "aguarda",
      "webhookId": "8b8edfe0-09ae-4d38-bebc-db36a711a8c1"
    },
    {
      "parameters": {
        "jsCode": "const diretorio = \"/tmp/youtubevideos/\" + $('DIRETÓRIO').first().json.diretorio_slug;\nconst totalImagens = Number($('SETUP').first().json.g_qtdimagens);\nconst duracaoAudio = Number($input.first().json.tempo_s);\n\nconst tempoPorImagem = Math.ceil((duracaoAudio / totalImagens) * 100) / 100;\n\nlet inputArgs = '';\nlet filtros = '';\nlet concat = '';\n\nfor (let i = 0; i < totalImagens; i++) {\n  const index = i + 1;\n  inputArgs += `-loop 1 -t ${tempoPorImagem} -i ${diretorio}/image_${index}.jpg \\\\\\n`;\n\n  const fadeIn = i === 0 ? '' : `fade=t=in:st=0:d=0.5,`;\n\n  let fadeOut = '';\n  if (i < totalImagens - 1 && tempoPorImagem > 0.5) {\n    const st = Math.max(0, parseFloat((tempoPorImagem - 0.5).toFixed(2)));\n    fadeOut = `fade=t=out:st=${st}:d=0.5,`;\n  }\n\n  filtros += `[${i}:v]${fadeIn}${fadeOut}setpts=PTS-STARTPTS[v${i}];\\n`;\n  concat += `[v${i}]`;\n}\n\nconst filterComplex = `${filtros}${concat}concat=n=${totalImagens}:v=1:a=0[outv]`;\n\nconst comando = `ffmpeg \\\\\n${inputArgs} \\\\\n-filter_complex \"${filterComplex}\" \\\\\n-map \"[outv]\" -c:v libx264 -preset ultrafast -pix_fmt yuv420p -y ${diretorio}/video_sem_legenda.mp4`;\n\nreturn [{\n  json: {\n    ffmpeg_command: comando\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -10368,
        992
      ],
      "id": "cfdabcbc-de9d-44f3-8312-35e58448c9cf",
      "name": "Gera comando ffmpeg"
    },
    {
      "parameters": {
        "fileSelector": "=/tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/video_sem_legenda.mp4",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -9936,
        800
      ],
      "id": "dd44590c-50ee-40c4-8255-e8956f54b305",
      "name": "Lê o vídeo"
    },
    {
      "parameters": {
        "fileSelector": "=/tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/video_com_legenda.mp4",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -8176,
        800
      ],
      "id": "fb9027b4-b97b-4d39-865d-6853accebe89",
      "name": "Lê o vídeo com legenda"
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "searchMethod": "query",
        "queryString": "=mimeType = 'audio/mpeg' and '{{ $('SETUP').item.json.g_musicas_dir }}' in parents and trashed = false",
        "filter": {},
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -7680,
        992
      ],
      "id": "1863de1f-02b9-46aa-954e-34f6e8ad8baa",
      "name": "Busca músicas no drive",
      "alwaysOutputData": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "z0kYms3IIDQWAD2S",
          "name": "Google Drive Nando"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "13446a55-0040-45ad-bf44-3691eb2dfe9d",
              "name": "tempo_s",
              "value": "={{ $json.duracao_em_segundos }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -10560,
        992
      ],
      "id": "d01f126e-5721-4e18-b2ef-9b9a2dd17ef0",
      "name": "NARRACAO"
    },
    {
      "parameters": {
        "command": "={{ $json.ffmpeg_command }}"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -6400,
        992
      ],
      "id": "dad170fe-ef89-46b0-80da-87fe8e10671f",
      "name": "Executa o comando"
    },
    {
      "parameters": {
        "content": "## 9 - Diminui o volume da música\n\nvolume=1.0 → volume original (100%)\n\nvolume=0.5 → metade do volume\n\nvolume=2.0 → dobro do volume",
        "height": 180,
        "width": 420,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5856,
        1184
      ],
      "typeVersion": 1,
      "id": "ac4f0af5-0d2b-43cf-a7ab-b7cad86d988b",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c80aff52-7be6-4a9d-9c0a-71dae422b30f",
              "name": "=duracao_video_com_legenda_em_segundos",
              "value": "={{ Math.round($item(\"0\").$node[\"Pega o tamanho do vídeo com legenda\"].json[\"stdout\"]) }}",
              "type": "number"
            },
            {
              "id": "f510669d-4419-48ba-870b-b66764464df7",
              "name": "duracao_musica_unida_em_segundos",
              "value": "={{ Math.round($item(\"0\").$node[\"Pega o tamanho da música unida\"].json[\"stdout\"]) }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4944,
        992
      ],
      "id": "4280c36f-23d9-4d92-8ce0-ec6da8f6920b",
      "name": "TEMPO VIDEO E MUSICA"
    },
    {
      "parameters": {
        "fileSelector": "=/tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/audio_mixado_final.mp3",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -4240,
        784
      ],
      "id": "528a16ee-bc35-4558-97c6-ab3e1a62120f",
      "name": "lê o arquivo gerado1"
    },
    {
      "parameters": {
        "command": "={{ $json.ffmpeg_command }}"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -4464,
        992
      ],
      "id": "f67a1b7a-6d5b-40fa-aa6b-6224076de7d0",
      "name": "Gera áudio mixado final"
    },
    {
      "parameters": {
        "jsCode": "const diretorio = \"/tmp/youtubevideos/\" + $('DIRETÓRIO').first().json.diretorio_slug;\n\nconst videoLegenda = `${diretorio}/video_com_legenda.mp4`;\nconst audioFinal = `${diretorio}/audio_mixado_final.mp3`;\nconst saidaFinal = `${diretorio}/video_final_completo.mp4`;\n\nconst comando = `ffmpeg \\\n-i \"${videoLegenda}\" \\\n-i \"${audioFinal}\" \\\n-c:v copy \\\n-c:a aac \\\n-shortest \\\n-y \"${saidaFinal}\"`;\n\nreturn [{\n  json: {\n    ffmpeg_command: comando\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3904,
        992
      ],
      "id": "5e9ed76f-862a-4bb1-8e10-4bcb648a0ba1",
      "name": "Gera comando para criar o vídeo completo"
    },
    {
      "parameters": {
        "command": "={{ $json.ffmpeg_command }}"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -3664,
        992
      ],
      "id": "4e9b4369-d9c7-4b0c-80e1-d54ccd806e33",
      "name": "Gera o vídeo"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"snippet\": {\n    \"title\": \"{{ $json.titulo }}\",\n    \"description\": \"{{ $json.descricao }}\",\n    \"categoryId\": \"22\"\n  },\n  \"status\": {\n    \"privacyStatus\": \"public\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2656,
        992
      ],
      "id": "73a93e78-80af-48ed-a245-922bd73fc814",
      "name": "JSON PUBLICACAO"
    },
    {
      "parameters": {
        "fileSelector": "=/tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/video_final_completo.mp4",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -2160,
        992
      ],
      "id": "b198c429-fd66-422d-b46b-8b53f666890f",
      "name": "Lê vídeo final"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://www.googleapis.com/upload/youtube/v3/videos?uploadType=resumable&part=snippet,status",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "youTubeOAuth2Api",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "snippet",
              "value": "={{ $json.snippet }}"
            },
            {
              "name": "status",
              "value": "={{ $json.status }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2416,
        992
      ],
      "id": "c99d0538-a4c4-4b61-b05d-d83a76c7b79e",
      "name": "YOUTUBE - Solicitação de sessão de upload"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $item(\"0\").$node[\"YOUTUBE - Solicitação de sessão de upload\"].json[\"headers\"][\"location\"] }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "youTubeOAuth2Api",
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1904,
        992
      ],
      "id": "6db09498-7464-487c-8671-9d93f7fce99d",
      "name": "Youtube - Envio do binário"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Generate a thumbnail image prompt based on the following psychological cosmic horror story:\n\n{{ $item(\"0\").$node[\"Remove caracteres especiais\"].json[\"roteiro\"] }}\n\nThe thumbnail must be eerie, mysterious, and visually stunning. Include no text in the image. Return a JSON with a prompt for image generation and a short, gripping phrase for overlay text.",
        "options": {
          "systemMessage": "=You are a professional AI visual artist specialized in designing cinematic, high-impact YouTube thumbnails for horror and sci-fi videos. Your goal is to generate visually compelling and mysterious prompts for image generation tools, based on story synopses provided by the user. The images must evoke curiosity, fear, or fascination, and reflect key moments, themes, or emotional beats from the story. Do not include any text in the image prompt itself. Also return a short, suspenseful phrase in {{ $item(\"0\").$node[\"SETUP\"].json[\"g_idioma\"] }} that could be used as an overlay text on the thumbnail to entice viewers to click.\n\nThe response must be a valid JSON in the format below:\n\n{\n  \"prompt\": \"A lone man standing in a dark observatory, staring up at a cosmic sky where stars form a grotesque, glowing alien face. The atmosphere is foggy, with unnatural greenish-blue tones. The town behind him is quiet and empty. The sky is distorted, with swirling constellations and strange celestial shadows. Cinematic horror lighting, photographic realism, unsettling sci-fi surrealism, cosmic dread.\",\n  \"texto\": \"They’re watching us from the stars...\"\n}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -1440,
        544
      ],
      "id": "cdc1c3ed-2109-417f-ac75-6c3bf2fd1af7",
      "name": "Agente Thumbnail"
    },
    {
      "parameters": {
        "jsCode": "const prompt = $input.first().json.prompt;\n\nreturn [\n  {\n    json: {\n      input: {\n        prompt: JSON.stringify(prompt),\n        go_fast: true,\n        megapixels: \"1\",\n        num_outputs: 1,\n        aspect_ratio: \"16:9\",\n        output_format: \"jpg\",\n        output_quality: 80,\n        num_inference_steps: 4,\n      }\n    }\n  }\n]\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -96,
        464
      ],
      "id": "4485a226-d74d-408b-a5a4-ad4d4fba4888",
      "name": "JSON IMAGEM"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.replicate.com/v1/models/black-forest-labs/flux-schnell/predictions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer r8_SUA_APIKEY"
            },
            {
              "name": "Prefer",
              "value": "wait"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        112,
        592
      ],
      "id": "211c0691-2601-41a5-b6e0-7a3f29868946",
      "name": "Gera thumbnail",
      "executeOnce": true
    },
    {
      "parameters": {
        "jsCode": "const corrigido = items.map(item => {\n  const corrigidoJSON = JSON.parse(item.json.output);\n  return corrigidoJSON;\n});\n\nreturn corrigido;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1040,
        448
      ],
      "id": "f25e9cda-1967-4ec7-910f-ce347abcac88",
      "name": "Faz o parser"
    },
    {
      "parameters": {
        "name": "=thumbnail.jpg",
        "driveId": {
          "__rl": true,
          "value": "={{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_id\"] }}",
          "mode": "id"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        0,
        0
      ],
      "id": "54c1971b-c570-40b8-8846-f5582bc95f20",
      "name": "Salva Gdrive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "z0kYms3IIDQWAD2S",
          "name": "Google Drive Nando"
        }
      }
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/tmp/youtubevideos/{{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}/thumbnail.jpg",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        0,
        240
      ],
      "id": "4ca7d540-f9dd-412d-97b6-3c54086ddfc1",
      "name": "Salva no /tmp/youtubevideos"
    },
    {
      "parameters": {
        "jsCode": "// Função que quebra o texto em linhas sem cortar palavras\nfunction quebrarTextoEmLinhas(texto, maxPorLinha) {\n  const palavras = texto.split(' ');\n  const linhas = [];\n  let linhaAtual = '';\n\n  for (const palavra of palavras) {\n    if ((linhaAtual + ' ' + palavra).trim().length > maxPorLinha) {\n      linhas.push(linhaAtual.trim());\n      linhaAtual = palavra;\n    } else {\n      linhaAtual += ' ' + palavra;\n    }\n  }\n\n  if (linhaAtual) {\n    linhas.push(linhaAtual.trim());\n  }\n\n  return linhas;\n}\n\nconst slug = $('DIRETÓRIO').first().json.diretorio_slug;\nconst textoTitulo = $('Faz o parser').first().json.texto;\n\nconst linhas = quebrarTextoEmLinhas(textoTitulo, 22);\nconst fonte = \"/tmp/youtubevideos/montserrat-black.ttf\";\n\nconst imagemEntrada = `/tmp/youtubevideos/${slug}/thumbnail.jpg`;\nconst imagemSaida = `/tmp/youtubevideos/${slug}/thumbnail_final.jpg`;\n\n// Altura base\nconst fontSize = textoTitulo.length > 50 ? 70 : 90;\nconst espacamento = Math.round(fontSize * 1.4); // 1.4x o tamanho da fonte\nconst alturaInicial = 400 - ((linhas.length - 1) * espacamento) / 2;\n\n// Monta todos os filtros drawtext para cada linha\nconst filtrosDrawtext = linhas.map((linha, i) => {\n  const texto = linha.replace(/'/g, \"\\\\'\").replace(/:/g, '\\\\:');\n  const y = alturaInicial + i * espacamento;\n\n  // Linha 2 (índice 1) em vermelho, as demais em amarelo\n  const cor = i === 1 ? '#FF0000' : '#FFFF00';\n\n  return `drawtext=text='${texto}':fontfile='${fonte}':fontcolor=${cor}:fontsize=${fontSize}:shadowcolor=black:shadowx=2:shadowy=2:x=(w-text_w)/2:y=${y}`;\n}).join(',');\n\n// Comando final\nconst comando = `ffmpeg -i \"${imagemEntrada}\" -vf \"${filtrosDrawtext}\" -y \"${imagemSaida}\"`;\n\nreturn [{\n  json: {\n    ffmpeg_command: comando\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        672,
        240
      ],
      "id": "1c84b875-c13b-4a44-86b3-ad2c7b050b95",
      "name": "Texto para thumb"
    },
    {
      "parameters": {
        "command": "={{ $json.ffmpeg_command }}"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        880,
        240
      ],
      "id": "c181c2b2-5dfa-4a6a-b5d8-a13b56ac8421",
      "name": "Adiciona texto na imagem"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://www.googleapis.com/upload/youtube/v3/thumbnails/set",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "videoId",
              "value": "={{ $('Youtube - Envio do binário').item.json.id }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1392,
        240
      ],
      "id": "72d5f850-4a14-4d39-b934-e0c5ea24eaa2",
      "name": "Atualiza no Youtube"
    },
    {
      "parameters": {
        "name": "=thumbnail_final.jpg",
        "driveId": {
          "__rl": true,
          "value": "={{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_id\"] }}",
          "mode": "id"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1392,
        0
      ],
      "id": "183b82e4-58d0-4fa1-be86-2f14762a8f3c",
      "name": "Salva nova thumb no gdrive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "z0kYms3IIDQWAD2S",
          "name": "Google Drive Nando"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1680,
        240
      ],
      "id": "ab9283ec-91fc-411d-b44e-51747d308d40",
      "name": "ACABOU"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -17904,
        624
      ],
      "id": "df2f8083-33d7-48ff-aa3f-4f40356b6697",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "model": "openai/gpt-oss-120b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        -17408,
        1008
      ],
      "id": "f2a4a3ba-67cd-44db-86b4-3d7716f21402",
      "name": "Groq Chat Model",
      "credentials": {
        "groqApi": {
          "id": "YVBFjEdN9UWannyJ",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "model": "openai/gpt-oss-120b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        -16752,
        704
      ],
      "id": "f6568b88-fa5a-4401-9dd8-acd689b9d7b2",
      "name": "Groq Chat Model1",
      "credentials": {
        "groqApi": {
          "id": "YVBFjEdN9UWannyJ",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "model": "openai/gpt-oss-120b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        -16016,
        1024
      ],
      "id": "e40fed87-dae3-49ef-aa47-0dcab265d0b5",
      "name": "Groq Chat Model2",
      "credentials": {
        "groqApi": {
          "id": "YVBFjEdN9UWannyJ",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "15TzqwGL017r61u-eDnMvzWFEmm-bGwt75mqSaIdNJOg"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Videos",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/15TzqwGL017r61u-eDnMvzWFEmm-bGwt75mqSaIdNJOg/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $item(\"0\").$node[\"SETUP\"].json[\"id\"] }}",
            "slug": "={{ $item(\"0\").$node[\"DIRETÓRIO\"].json[\"diretorio_slug\"] }}",
            "titulo": "={{ $item(\"0\").$node[\"PUBLICAÇÃO\"].json[\"title\"] }}",
            "descricao": "={{ $item(\"0\").$node[\"PUBLICAÇÃO\"].json[\"description\"] }}",
            "tags": "={{ $item(\"0\").$node[\"PUBLICAÇÃO\"].json[\"tags\"] }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "slug",
              "displayName": "slug",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "titulo",
              "displayName": "titulo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "descricao",
              "displayName": "descricao",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "tags",
              "displayName": "tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -13744,
        720
      ],
      "id": "79c9e136-b7c4-4db7-8a35-977c26a24966",
      "name": "Append or update row in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "vHqCTXoRqXEhzJ3k",
          "name": "Google Sheets nando"
        }
      }
    },
    {
      "parameters": {
        "model": "openai/gpt-oss-120b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        -1456,
        768
      ],
      "id": "b04f8780-25c4-4704-81db-3b7307ea7f3e",
      "name": "Groq Chat Model3",
      "credentials": {
        "groqApi": {
          "id": "YVBFjEdN9UWannyJ",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "1AVHSW73x0v-08-H5GWN38W6PjV5vAqCU",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -13392,
        720
      ],
      "id": "1d0aef72-25de-48e6-8015-136f531bfbe1",
      "name": "Download file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "z0kYms3IIDQWAD2S",
          "name": "Google Drive Nando"
        }
      }
    }
  ],
  "pinData": {
    "Agente Roteiro": [
      {
        "json": {
          "output": "Atmospheric Opening:\nThe night air over the old observatory hummed with a low, metallic sigh. Fog rolled in from the river, clinging to stone like a thin veil, swallowing distant lights. Lanterns along the gravel path flickered, each pulse a hesitant gasp, as if darkness itself were reluctant to settle. A faint rustle beyond the pines sounded like an engine winding down. Even the owls on the ruined tower fell mute, their hoots swallowed by the fog.\n\nCreeping Revelation:\nDr. Mara Linde came to calibrate the new spectrograph, a machine meant to listen to distant stars. On the third night it recorded a pattern that was not a frequency but a rhythm—a slow thrum that seemed to pulse with the fog. The fog grew denser whenever the thrum rose, and shadows at the dome’s edge elongated like fingers. Small scratches appeared on the glass, each aligning with a beat. The gauges trembled, as if the metal sensed the pulse.\n\nPsychological Escalation:\nSleep fled. Mara traced the faint scratches on the concrete, each line a mirror of the thrum in her head. The walls whispered in a language both foreign and intimate, echoing memories she never lived: wet pine, iron, a forgotten lullaby. Paranoia grew as she suspected the spectrograph was broadcasting, not listening. Turning the dial intensified the thrum, and the fog pressed tighter, distorting the stars into swirling glyphs she could not read. Her pulse matched the thrum, a drumbeat she could not silence.\n\nCosmic Confrontation:\nOn the seventh night the dome’s ribs sang a low chord that vibrated through her teeth. The fog peeled away in a translucent sheet, revealing a pale expanse studded with geometric constellations that moved with intention. From that void emerged silhouettes of beings whose bodies were shifting light and shadow, forms impossible to fix. They hovered within the space of her mind, a pressure that flattened thought. In horrified clarity she saw they were not visitors but architects of perception, reshaping reality beyond human comprehension.\n\nAmbiguous Resolution:\nMara’s last log ends mid‑sentence, ink smeared by an unseen hand. The spectrograph hums on, its readings now a chorus of alien cadences that match no known star. The fog lingers, thicker than ever, and the observatory stands empty, lanterns forever flickering, waiting for the next mind to tune into the cosmic rhythm."
        }
      }
    ],
    "Agente Publicação": [
      {
        "json": {
          "output": {
            "description": "Based on true events, this chilling tale follows Dr. Mara Linde's encounter with an alien rhythm that turned an old observatory into a nightmare. Do you believe in extraterrestrial life? The fog, the thrum, the horror…\nSubscribe for more terrifying, real‑world alien stories!",
            "tags": "alien, ufo, terror, mystery, haunting, observatory, fog, spectrograph, extraterrestrial, horror",
            "title": "ALIEN TERROR AT THE HAUNTING OBSERVATORY: UFO MYSTERY..."
          }
        }
      }
    ]
  },
  "connections": {
    "Remove caracteres especiais": {
      "main": [
        [
          {
            "node": "ROTEIRO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP ElevenLabs": {
      "main": [
        []
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "Combina",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gera os prompts das imagens": {
      "main": [
        [
          {
            "node": "Limpa o JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limpa o JSON": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar imagem": {
      "main": [
        [
          {
            "node": "aguarda",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pega status da imagem": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Baixa a imagem2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "aguarda",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          },
          {
            "node": "Pega o tamanho da narração mp3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limpa o diretorio /tmp/youtubevideos": {
      "main": [
        [
          {
            "node": "SETUP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cria o diretório no /tmp/youtubevideos se não existir": {
      "main": [
        [
          {
            "node": "lista",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Salva img no /tmp/youtubevideos": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pega a narração": {
      "main": [
        [
          {
            "node": "transcreve  audio no GROQ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcreve  audio no GROQ": {
      "main": [
        [
          {
            "node": "Limpa o retorno do GROQ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limpa o retorno do GROQ": {
      "main": [
        [
          {
            "node": "gera .ass",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gera .ass": {
      "main": [
        [
          {
            "node": "Salva legenda no /tmp/youtubevideos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Salva legenda no /tmp/youtubevideos": {
      "main": [
        [
          {
            "node": "Gera vídeo com legenda",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gera vídeo sem legenda": {
      "main": [
        [
          {
            "node": "Lê o vídeo",
            "type": "main",
            "index": 0
          },
          {
            "node": "Pega a narração",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gera vídeo com legenda": {
      "main": [
        [
          {
            "node": "Lê o vídeo com legenda",
            "type": "main",
            "index": 0
          },
          {
            "node": "Quantas musicas preciso",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quantas musicas preciso": {
      "main": [
        [
          {
            "node": "Busca músicas no drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Seleciona X de forma aleatória": {
      "main": [
        [
          {
            "node": "Faz o download da música",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Faz o download da música": {
      "main": [
        [
          {
            "node": "Salva as músicas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Salva as músicas": {
      "main": [
        [
          {
            "node": "Gera comando para unir as músicas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gera comando para unir as músicas": {
      "main": [
        [
          {
            "node": "Executa o comando",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pega o tamanho do vídeo com legenda": {
      "main": [
        [
          {
            "node": "Pega o tamanho da música unida",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pega o tamanho da música unida": {
      "main": [
        [
          {
            "node": "TEMPO VIDEO E MUSICA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Abaixa o volume da música": {
      "main": [
        [
          {
            "node": "Pega o tamanho do vídeo com legenda",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "comando para unir música com narração": {
      "main": [
        [
          {
            "node": "Gera áudio mixado final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pega o tamanho da narração mp3": {
      "main": [
        [
          {
            "node": "Configura o tamanho da narração",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Configura o tamanho da narração": {
      "main": [
        [
          {
            "node": "NARRACAO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Upload do vídeo final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Limpa o diretorio /tmp/youtubevideos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "JSON PUBLICACAO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Pega status da imagem1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pega status da imagem1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Baixa a imagem",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Baixa a imagem": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Salva no /tmp/youtubevideos",
            "type": "main",
            "index": 0
          },
          {
            "node": "Salva Gdrive",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "JSON IMAGEM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "pega nova thumb1": {
      "main": [
        [
          {
            "node": "Atualiza no Youtube",
            "type": "main",
            "index": 0
          },
          {
            "node": "Salva nova thumb no gdrive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Salva a fonte": {
      "main": [
        [
          {
            "node": "Texto para thumb",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Faz o download da fonte ttf": {
      "main": [
        [
          {
            "node": "Salva a fonte",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Agente Publicação",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Agente Roteiro": {
      "main": [
        [
          {
            "node": "Verifica qtd caracteres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ROTEIRO": {
      "main": [
        [
          {
            "node": "Agente Publicação",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SETUP": {
      "main": [
        [
          {
            "node": "Agente Roteiro",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agente Publicação": {
      "main": [
        [
          {
            "node": "PUBLICAÇÃO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PUBLICAÇÃO": {
      "main": [
        [
          {
            "node": "Gera a slug do diretório",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gera a slug do diretório": {
      "main": [
        [
          {
            "node": "Cria o diretório no /tmp/youtubevideos se não existir",
            "type": "main",
            "index": 0
          },
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          },
          {
            "node": "Combina",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "DIRETÓRIO": {
      "main": [
        [
          {
            "node": "Monta o TXT em base64",
            "type": "main",
            "index": 0
          },
          {
            "node": "Gera roteiro em base64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combina": {
      "main": [
        [
          {
            "node": "DIRETÓRIO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Monta o TXT em base64": {
      "main": [
        [
          {
            "node": "Salva no GDrive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gera roteiro em base64": {
      "main": [
        [
          {
            "node": "Salva roteiro1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Salva roteiro",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verifica qtd caracteres": {
      "main": [
        [
          {
            "node": "Ajusta caracteres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Remove caracteres especiais",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ajusta caracteres": {
      "main": [
        [
          {
            "node": "Remove caracteres especiais",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Baixa a imagem2": {
      "main": [
        [
          {
            "node": "Salva img no /tmp/youtubevideos",
            "type": "main",
            "index": 0
          },
          {
            "node": "Salva no GDrive1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "aguarda": {
      "main": [
        [
          {
            "node": "Pega status da imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gera comando ffmpeg": {
      "main": [
        [
          {
            "node": "Gera vídeo sem legenda",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca músicas no drive": {
      "main": [
        [
          {
            "node": "Seleciona X de forma aleatória",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NARRACAO": {
      "main": [
        [
          {
            "node": "Gera comando ffmpeg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Executa o comando": {
      "main": [
        [
          {
            "node": "lê o arquivo gerado",
            "type": "main",
            "index": 0
          },
          {
            "node": "lista o diretório1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Abaixa o volume da música",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TEMPO VIDEO E MUSICA": {
      "main": [
        [
          {
            "node": "comando para unir música com narração",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gera áudio mixado final": {
      "main": [
        [
          {
            "node": "lê o arquivo gerado1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Gera comando para criar o vídeo completo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gera comando para criar o vídeo completo": {
      "main": [
        [
          {
            "node": "Gera o vídeo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gera o vídeo": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          },
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON PUBLICACAO": {
      "main": [
        [
          {
            "node": "YOUTUBE - Solicitação de sessão de upload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lê vídeo final": {
      "main": [
        [
          {
            "node": "Youtube - Envio do binário",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YOUTUBE - Solicitação de sessão de upload": {
      "main": [
        [
          {
            "node": "Lê vídeo final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Youtube - Envio do binário": {
      "main": [
        [
          {
            "node": "Agente Thumbnail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON IMAGEM": {
      "main": [
        [
          {
            "node": "Gera thumbnail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gera thumbnail": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agente Thumbnail": {
      "main": [
        [
          {
            "node": "Faz o parser",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Faz o parser": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Salva no /tmp/youtubevideos": {
      "main": [
        [
          {
            "node": "Faz o download da fonte ttf",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Texto para thumb": {
      "main": [
        [
          {
            "node": "Adiciona texto na imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adiciona texto na imagem": {
      "main": [
        [
          {
            "node": "pega nova thumb1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza no Youtube": {
      "main": [
        [
          {
            "node": "ACABOU",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Agente Roteiro",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Ajusta caracteres",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Agente Publicação",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Salva roteiro": {
      "main": [
        [
          {
            "node": "Append or update row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append or update row in sheet1": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Agente Thumbnail",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Salva áudio no TMP",
            "type": "main",
            "index": 0
          },
          {
            "node": "Salva áudio",
            "type": "main",
            "index": 0
          },
          {
            "node": "Gera os prompts das imagens",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "e82c1979-5421-4dc1-86c7-c8a2ec128e4d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "51ec8b13dcbf144ca4f84c354a83778b0deb1106e3615dc3e4f21105dfa59e92"
  },
  "id": "WNKPgBkTc2CN5wwB",
  "tags": []
}
